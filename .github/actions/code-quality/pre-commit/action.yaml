name: "Pre-commit Quality Checks"
description: "Runs pre-commit hooks for code quality checks"

inputs:
  python-version:
    description: "Python version to use"
    required: false
    default: "3.10"
  node-version:
    description: "Node.js version to use"
    required: false
    default: "18.15.0"
  skip:
    description: "Comma-separated list of hooks to skip"
    required: false
    default: ""
  cache:
    description: "Whether to use caching"
    required: false
    default: "true"

outputs:
  cache-hit:
    description: "Whether the cache was hit"
    value: ${{ steps.pre-commit-cache.outputs.cache-hit }}

runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: pip
        cache-dependency-path: .pre-commit-config.yaml

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install pre-commit
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Cache pre-commit hooks
      if: inputs.cache == 'true'
      id: pre-commit-cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ runner.os }}-py${{ inputs.python-version }}-node${{ inputs.node-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          pre-commit-${{ runner.os }}-py${{ inputs.python-version }}-node${{ inputs.node-version }}-
          pre-commit-${{ runner.os }}-py${{ inputs.python-version }}-

    - name: Run pre-commit checks
      shell: bash
      env:
        SKIP: ${{ inputs.skip }}
      run: |
        if [ -n "$SKIP" ]; then
          pre-commit run --all-files --hook-stage="$SKIP"
        else
          pre-commit run --all-files
        fi
